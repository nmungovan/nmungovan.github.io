{"ast":null,"code":"var _jsxFileName = \"/Users/nolanmungovan/Desktop/NEU/Summer1 2023/nmungovan.github.io/my-app/src/pages/Components/GridItems.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatDate(start, end) {\n  const startDate = start.getUTCDate();\n  let endDate = 'Present';\n  if (end) {\n    endDate = end.getMonth().toString().concat('/', end.getFullYear().toString());\n  }\n  return startDate.concat(' - ', endDate);\n}\nexport function GridItem(_ref) {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this);\n}\n_c = GridItem;\nexport function Title(_ref2) {\n  let {\n    children\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"font-semibold text-left px-5\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this);\n}\n_c2 = Title;\nexport function SecondaryItem(_ref3) {\n  let {\n    children\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"font-normal text-right px-5\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this);\n}\n_c3 = SecondaryItem;\nexport function WorkExperienceItem(_ref4) {\n  let {\n    workExp\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-2 bg-stone-800 text-slate-50\",\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: workExp.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SecondaryItem, {\n      children: workExp.location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SecondaryItem, {\n      children: formatDate(workExp.startDate, workExp.endDate)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this);\n}\n_c4 = WorkExperienceItem;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"GridItem\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"SecondaryItem\");\n$RefreshReg$(_c4, \"WorkExperienceItem\");","map":{"version":3,"names":["formatDate","start","end","startDate","getUTCDate","endDate","getMonth","toString","concat","getFullYear","GridItem","_ref","children","_jsxDEV","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","Title","_ref2","_c2","SecondaryItem","_ref3","_c3","WorkExperienceItem","_ref4","workExp","name","location","_c4","$RefreshReg$"],"sources":["/Users/nolanmungovan/Desktop/NEU/Summer1 2023/nmungovan.github.io/my-app/src/pages/Components/GridItems.tsx"],"sourcesContent":["import { PropsWithChildren } from \"react\";\n\nexport type WorkExperience = {\n    name: string\n    location: string\n    position: string\n    startDate: Date\n    endDate?: Date\n    description: string\n}\n\nfunction formatDate(start: Date, end?: Date): string {\n    const startDate = start.getUTCDate()\n    let endDate = 'Present'\n    if(end) {\n        endDate = end.getMonth().toString().concat('/', end.getFullYear().toString())\n    }\n    return startDate.concat(' - ', endDate)\n}\n\nexport function GridItem({children}: PropsWithChildren<{}>) {\n    return (<div className=''>{children}</div>)\n}\n\nexport function Title({children}: PropsWithChildren<{}>) {\n    return (<h2 className='font-semibold text-left px-5'>{children}</h2>)\n}\n\nexport function SecondaryItem({children}: PropsWithChildren<{}>) {\n    return (<h2 className='font-normal text-right px-5'>{children}</h2>)\n}\n\nexport function WorkExperienceItem({workExp}:{workExp: WorkExperience}): JSX.Element & PropsWithChildren {\n    return (<div className='grid grid-cols-2 bg-stone-800 text-slate-50'>\n        <Title>{workExp.name}</Title>\n        <SecondaryItem>{workExp.location}</SecondaryItem>\n        <SecondaryItem>{formatDate(workExp.startDate, workExp.endDate)}</SecondaryItem>\n    </div>)\n}"],"mappings":";;AAWA,SAASA,UAAUA,CAACC,KAAW,EAAEC,GAAU,EAAU;EACjD,MAAMC,SAAS,GAAGF,KAAK,CAACG,UAAU,CAAC,CAAC;EACpC,IAAIC,OAAO,GAAG,SAAS;EACvB,IAAGH,GAAG,EAAE;IACJG,OAAO,GAAGH,GAAG,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,MAAM,CAAC,GAAG,EAAEN,GAAG,CAACO,WAAW,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,CAAC;EACjF;EACA,OAAOJ,SAAS,CAACK,MAAM,CAAC,KAAK,EAAEH,OAAO,CAAC;AAC3C;AAEA,OAAO,SAASK,QAAQA,CAAAC,IAAA,EAAoC;EAAA,IAAnC;IAACC;EAA+B,CAAC,GAAAD,IAAA;EACtD,oBAAQE,OAAA;IAAKC,SAAS,EAAC,EAAE;IAAAF,QAAA,EAAEA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC9C;AAACC,EAAA,GAFeT,QAAQ;AAIxB,OAAO,SAASU,KAAKA,CAAAC,KAAA,EAAoC;EAAA,IAAnC;IAACT;EAA+B,CAAC,GAAAS,KAAA;EACnD,oBAAQR,OAAA;IAAIC,SAAS,EAAC,8BAA8B;IAAAF,QAAA,EAAEA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACxE;AAACI,GAAA,GAFeF,KAAK;AAIrB,OAAO,SAASG,aAAaA,CAAAC,KAAA,EAAoC;EAAA,IAAnC;IAACZ;EAA+B,CAAC,GAAAY,KAAA;EAC3D,oBAAQX,OAAA;IAAIC,SAAS,EAAC,6BAA6B;IAAAF,QAAA,EAAEA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACvE;AAACO,GAAA,GAFeF,aAAa;AAI7B,OAAO,SAASG,kBAAkBA,CAAAC,KAAA,EAAuE;EAAA,IAAtE;IAACC;EAAiC,CAAC,GAAAD,KAAA;EAClE,oBAAQd,OAAA;IAAKC,SAAS,EAAC,6CAA6C;IAAAF,QAAA,gBAChEC,OAAA,CAACO,KAAK;MAAAR,QAAA,EAAEgB,OAAO,CAACC;IAAI;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7BL,OAAA,CAACU,aAAa;MAAAX,QAAA,EAAEgB,OAAO,CAACE;IAAQ;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC,eACjDL,OAAA,CAACU,aAAa;MAAAX,QAAA,EAAEZ,UAAU,CAAC4B,OAAO,CAACzB,SAAS,EAAEyB,OAAO,CAACvB,OAAO;IAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9E,CAAC;AACV;AAACa,GAAA,GANeL,kBAAkB;AAAA,IAAAP,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAV,GAAA;AAAAU,YAAA,CAAAP,GAAA;AAAAO,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}